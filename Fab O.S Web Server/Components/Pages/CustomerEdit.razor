@page "/customers/new"
@page "/customers/edit/{Id:int}"
@rendermode InteractiveServer
@using FabOS.WebServer.Components.Shared
@using FabOS.WebServer.Components.Shared.Interfaces
@using FabOS.WebServer.Data.Contexts
@using FabOS.WebServer.Models.Entities
@using Microsoft.EntityFrameworkCore
@using System.ComponentModel.DataAnnotations

<PageTitle>@(Id == 0 ? "New Customer" : "Edit Customer") - Fab.OS</PageTitle>

<!-- Standard Toolbar -->
<StandardToolbar ActionProvider="@this" ShowSearch="false" />

<!-- Content -->
<div class="customer-edit-container">
    <div class="form-header">
        <h2>@(Id == 0 ? "New Customer Card" : "Edit Customer Card")</h2>
    </div>

    <EditForm Model="@customerModel" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />

        <div class="form-card">
            <!-- Basic Information Section -->
            <div class="form-section">
                <h3 class="section-title">Customer Information</h3>

                <div class="form-row">
                    <div class="form-group">
                        <label for="customerCode">Customer Code *</label>
                        <InputText id="customerCode" @bind-Value="customerModel.Code"
                                   class="@($"form-control {(string.IsNullOrEmpty(customerModel.Code) ? "highlight-field" : "")}")"
                                   placeholder="Click another field to auto-generate"
                                   @onfocus="GenerateCustomerCode"
                                   readonly="@(!string.IsNullOrEmpty(customerModel.Code))" />
                        <ValidationMessage For="@(() => customerModel.Code)" />
                        <small class="form-text text-muted">Auto-generated unique identifier</small>
                    </div>

                    <div class="form-group">
                        <label for="customerName">Customer Name *</label>
                        <InputText id="customerName" @bind-Value="customerModel.Name"
                                   @onfocus="GenerateCustomerCode"
                                   class="form-control" placeholder="Enter customer name" />
                        <ValidationMessage For="@(() => customerModel.Name)" />
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group">
                        <label for="abn">ABN</label>
                        <InputText id="abn" @bind-Value="customerModel.ABN"
                                   @onfocus="GenerateCustomerCode"
                                   class="form-control"
                                   placeholder="XX XXX XXX XXX" />
                        <small class="form-text text-muted">Use ABN Lookup in toolbar to search and auto-populate</small>
                    </div>

                    <div class="form-group">
                        <label for="industry">Industry</label>
                        <InputSelect id="industry" @bind-Value="customerModel.Industry" class="form-control">
                            <option value="">Select industry...</option>
                            <option value="Construction">Construction</option>
                            <option value="Manufacturing">Manufacturing</option>
                            <option value="Mining">Mining</option>
                            <option value="Infrastructure">Infrastructure</option>
                            <option value="Commercial">Commercial</option>
                            <option value="Government">Government</option>
                            <option value="Residential">Residential</option>
                            <option value="Other">Other</option>
                        </InputSelect>
                    </div>
                </div>


                <div class="form-row">
                    <div class="form-group">
                        <label for="website">Website</label>
                        <InputText id="website" @bind-Value="customerModel.Website"
                                   @onfocus="GenerateCustomerCode"
                                   class="form-control" placeholder="https://example.com" />
                    </div>

                    <div class="form-group">
                        <label for="status">Status</label>
                        <InputSelect id="status" @bind-Value="customerModel.IsActive" class="form-control">
                            <option value="true">Active</option>
                            <option value="false">Inactive</option>
                        </InputSelect>
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group full-width">
                        <label for="notes">Notes</label>
                        <InputTextArea id="notes" @bind-Value="customerModel.Notes"
                                       class="form-control" placeholder="Additional notes about the customer"
                                       rows="3" />
                    </div>
                </div>
            </div>

            <!-- Primary Address Section -->
            <div class="form-section">
                <h3 class="section-title">Primary Address</h3>

                <div class="form-row">
                    <div class="form-group full-width">
                        <label for="addressSearch">Search Address</label>
                        <div class="address-autocomplete-wrapper">
                            <input type="text" id="addressSearch" class="form-control form-control-lg"
                                   placeholder="Start typing an address..."
                                   value="@addressSearchText"
                                   @oninput="@(async (e) => await SearchAddress(e))" />
                            <div id="addressSuggestions" class="address-suggestions" style="display: @(showSuggestions ? "block" : "none")">
                                @foreach (var suggestion in addressSuggestions)
                                {
                                    <div class="suggestion-item" @onclick="@(async () => await SelectAddress(suggestion))">
                                        <i class="fas fa-map-marker-alt"></i>
                                        <span>@suggestion.Description</span>
                                    </div>
                                }
                            </div>
                        </div>
                        <small class="form-text text-muted">Powered by Google Places</small>
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group">
                        <label for="addressLine1">Address Line 1</label>
                        <InputText id="addressLine1" @bind-Value="addressModel.AddressLine1"
                                   class="form-control" placeholder="Street address" />
                    </div>

                    <div class="form-group">
                        <label for="addressLine2">Address Line 2</label>
                        <InputText id="addressLine2" @bind-Value="addressModel.AddressLine2"
                                   class="form-control" placeholder="Suite, unit, building, floor, etc." />
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group">
                        <label for="city">City/Suburb</label>
                        <InputText id="city" @bind-Value="addressModel.City"
                                   class="form-control" placeholder="City or suburb" />
                    </div>

                    <div class="form-group">
                        <label for="state">State</label>
                        <InputSelect id="state" @bind-Value="addressModel.State" class="form-control">
                            <option value="">Select state...</option>
                            <option value="NSW">New South Wales</option>
                            <option value="VIC">Victoria</option>
                            <option value="QLD">Queensland</option>
                            <option value="WA">Western Australia</option>
                            <option value="SA">South Australia</option>
                            <option value="TAS">Tasmania</option>
                            <option value="ACT">Australian Capital Territory</option>
                            <option value="NT">Northern Territory</option>
                        </InputSelect>
                    </div>

                    <div class="form-group">
                        <label for="postalCode">Postal Code</label>
                        <InputText id="postalCode" @bind-Value="addressModel.PostalCode"
                                   class="form-control" placeholder="0000" />
                    </div>
                </div>
            </div>

            <!-- Contacts Management Section -->
            <div class="form-section">
                <div class="section-header">
                    <h3 class="section-title">Contacts</h3>
                    <button type="button" class="btn btn-primary" @onclick="AddNewContact">
                        <i class="fas fa-plus"></i> Add Contact
                    </button>
                </div>

                @if (!customerContacts.Any())
                {
                    <div class="empty-state">
                        <i class="fas fa-users fa-3x text-muted mb-3"></i>
                        <p class="text-muted">No contacts added yet</p>
                        <button type="button" class="btn btn-outline-primary" @onclick="AddNewContact">
                            <i class="fas fa-plus"></i> Add First Contact
                        </button>
                    </div>
                }
                else
                {
                    <div class="contacts-grid">
                        @foreach (var contact in customerContacts)
                        {
                            <ContactCard Contact="contact"
                                       IsEditMode="@(editingContactId == contact.Id)"
                                       OnSave="SaveContact"
                                       OnDelete="DeleteContact"
                                       OnSetPrimary="SetContactAsPrimary"
                                       OnCancel="CancelContactEdit" />
                        }
                    </div>
                }
            </div>

            <!-- Legacy Fields Section (for backward compatibility) -->
            <div class="form-section collapsed">
                <h3 class="section-title" @onclick="ToggleLegacySection">
                    <i class="fas @(showLegacy ? "fa-chevron-down" : "fa-chevron-right")"></i>
                    Legacy Information
                </h3>

                @if (showLegacy)
                {
                    <div class="form-row">
                        <div class="form-group">
                            <label for="legacyContact">Contact Person (Legacy)</label>
                            <InputText id="legacyContact" @bind-Value="customerModel.ContactPerson"
                                       class="form-control" placeholder="Legacy contact field" />
                        </div>

                        <div class="form-group">
                            <label for="legacyEmail">Email (Legacy)</label>
                            <InputText id="legacyEmail" @bind-Value="customerModel.Email"
                                       class="form-control" placeholder="Legacy email field" />
                        </div>

                        <div class="form-group">
                            <label for="legacyPhone">Phone (Legacy)</label>
                            <InputText id="legacyPhone" @bind-Value="customerModel.PhoneNumber"
                                       class="form-control" placeholder="Legacy phone field" />
                        </div>
                    </div>
                    <small class="form-text text-muted">These fields are maintained for backward compatibility with existing data.</small>
                }
            </div>

            <!-- Form Actions -->
            <div class="form-actions">
                <button type="button" class="btn btn-secondary" @onclick="Cancel">
                    <i class="fas fa-times"></i>
                    Cancel
                </button>
                <button type="submit" class="btn btn-primary" disabled="@isProcessing">
                    @if (isProcessing)
                    {
                        <span class="spinner-border spinner-border-sm" role="status"></span>
                        <span>Saving...</span>
                    }
                    else
                    {
                        <i class="fas fa-save"></i>
                        <span>Save Customer</span>
                    }
                </button>
            </div>
        </div>

        <ValidationSummary />
    </EditForm>
</div>


<!-- ABN Search Modal -->
@if (showAbnSearchDialog)
{
    <div class="modal-backdrop" @onclick="CloseAbnSearchDialog"></div>
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h3>ABN Lookup</h3>
                <button type="button" class="close-btn" @onclick="CloseAbnSearchDialog">×</button>
            </div>
            <div class="modal-body">
                <div class="search-mode-toggle">
                    <button type="button" class="toggle-btn @(abnSearchMode == "abn" ? "active" : "")"
                            @onclick="@(() => SetSearchMode("abn"))">
                        <i class="fas fa-hashtag"></i> Search by ABN
                    </button>
                    <button type="button" class="toggle-btn @(abnSearchMode == "name" ? "active" : "")"
                            @onclick="@(() => SetSearchMode("name"))">
                        <i class="fas fa-building"></i> Search by Name
                    </button>
                </div>

                <div class="search-input-section">
                    @if (abnSearchMode == "abn")
                    {
                        <label>Enter ABN</label>
                        <input type="text" @bind="abnSearchTerm" class="form-control form-control-lg" placeholder="XX XXX XXX XXX" />
                    }
                    else
                    {
                        <label>Business Name</label>
                        <input type="text" @bind="abnSearchTerm" class="form-control form-control-lg" placeholder="Enter business name..." />
                    }

                    <button type="button" class="btn btn-primary mt-3" @onclick="PerformAbnSearch" disabled="@(isLoadingAbn || string.IsNullOrWhiteSpace(abnSearchTerm))">
                        @if (isLoadingAbn)
                        {
                            <span class="spinner-border spinner-border-sm"></span>
                            <span> Searching...</span>
                        }
                        else
                        {
                            <i class="fas fa-search"></i>
                            <span> Search</span>
                        }
                    </button>
                </div>

                @if (!string.IsNullOrEmpty(abnValidationMessage))
                {
                    <div class="alert @(abnValidationClass == "valid" || abnValidationClass == "populated" ? "alert-success" : "alert-warning") mt-3">
                        @abnValidationMessage
                    </div>
                }

                @if (showAbnResults && abnSearchResults.Any())
                {
                    <div class="search-results mt-4">
                        <h4>Search Results</h4>
                        @foreach (var result in abnSearchResults)
                        {
                            <div class="result-card" @onclick="@(() => { SelectAbnResult(result); CloseAbnSearchDialog(); })">
                                <div class="result-header">
                                    <strong>@result.DisplayName</strong>
                                    @if (result.AbnStatus == "Active")
                                    {
                                        <span class="badge badge-success">Active</span>
                                    }
                                    else
                                    {
                                        <span class="badge badge-secondary">@result.AbnStatus</span>
                                    }
                                </div>
                                <div class="result-details">
                                    <div><i class="fas fa-hashtag"></i> ABN: @result.Abn</div>
                                    @if (!string.IsNullOrEmpty(result.EntityTypeName))
                                    {
                                        <div><i class="fas fa-tag"></i> @result.EntityTypeName</div>
                                    }
                                    @if (!string.IsNullOrEmpty(result.FormattedAddress))
                                    {
                                        <div><i class="fas fa-map-marker-alt"></i> @result.FormattedAddress</div>
                                    }
                                    @if (result.TradingNames.Any())
                                    {
                                        <div><i class="fas fa-store"></i> Trading: @string.Join(", ", result.TradingNames)</div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                }
                else if (showAbnResults && !abnSearchResults.Any())
                {
                    <div class="alert alert-info mt-4">
                        No results found. Please try a different search term.
                    </div>
                }
            </div>
        </div>
    </div>
}

<!-- Google Places API Script -->
@if (!hasLoadedGoogleMaps)
{
    <script src="https://maps.googleapis.com/maps/api/js?key=@googleMapsApiKey&libraries=places&callback=initGooglePlaces" async defer></script>
    <script>
        window.initGooglePlaces = function() {
            window.googlePlacesReady = true;
        };
    </script>
}

<style>
    .customer-edit-container {
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
    }

    .form-header {
        margin-bottom: 30px;
    }

    .form-header h2 {
        color: #333;
        font-weight: 600;
        font-size: 28px;
    }

    .form-card {
        background: white;
        border-radius: 12px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        padding: 0;
        overflow: hidden;
    }

    .form-section {
        padding: 30px;
        border-bottom: 1px solid #eee;
    }

    .form-section:last-of-type {
        border-bottom: none;
    }

    .section-title {
        color: #0D1A80;
        font-size: 18px;
        font-weight: 600;
        margin-bottom: 20px;
        cursor: default;
    }

    .form-section.collapsed .section-title {
        cursor: pointer;
        transition: color 0.2s;
    }

    .form-section.collapsed .section-title:hover {
        color: #3144CD;
    }

    .form-row {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
        margin-bottom: 20px;
    }

    .form-row:last-child {
        margin-bottom: 0;
    }

    .form-group {
        display: flex;
        flex-direction: column;
    }

    .form-group.full-width {
        grid-column: 1 / -1;
    }

    .form-group label {
        font-weight: 600;
        color: #333;
        margin-bottom: 8px;
        font-size: 14px;
    }

    .form-control {
        padding: 10px 12px;
        border: 1px solid #ddd;
        border-radius: 6px;
        font-size: 14px;
        transition: all 0.2s;
    }

    .form-control:focus {
        outline: none;
        border-color: #0D1A80;
        box-shadow: 0 0 0 3px rgba(13, 26, 128, 0.1);
    }

    .form-control.highlight-field {
        background-color: #fff9e6;
        border-color: #ffc107;
    }

    .form-control[readonly] {
        background-color: #f5f5f5;
        cursor: not-allowed;
    }

    textarea.form-control {
        resize: vertical;
        min-height: 80px;
    }

    .form-text {
        font-size: 12px;
        color: #666;
        margin-top: 4px;
    }

    .validation-message {
        color: #dc3545;
        font-size: 12px;
        margin-top: 4px;
    }

    /* Address Autocomplete Styles */
    .address-autocomplete-wrapper {
        position: relative;
    }

    .address-suggestions {
        position: absolute;
        top: 100%;
        left: 0;
        right: 0;
        background: white;
        border: 1px solid #ddd;
        border-top: none;
        border-radius: 0 0 6px 6px;
        max-height: 300px;
        overflow-y: auto;
        z-index: 1000;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    }

    .suggestion-item {
        padding: 12px;
        cursor: pointer;
        transition: background 0.2s;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .suggestion-item:hover {
        background: #f8f9fa;
    }

    .suggestion-item i {
        color: #0D1A80;
        font-size: 14px;
    }

    /* Form Actions */
    .form-actions {
        padding: 20px 30px;
        background: #f8f9fa;
        display: flex;
        justify-content: flex-end;
        gap: 12px;
    }

    .btn {
        padding: 10px 20px;
        border: none;
        border-radius: 6px;
        font-weight: 600;
        cursor: pointer;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        transition: all 0.2s;
        font-size: 14px;
    }

    .btn-primary {
        background: linear-gradient(135deg, #0D1A80 0%, #3144CD 100%);
        color: white;
    }

    .btn-primary:hover:not(:disabled) {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(13, 26, 128, 0.3);
    }

    .btn-secondary {
        background: #6c757d;
        color: white;
    }

    .btn-secondary:hover {
        background: #5a6268;
    }

    .btn:disabled {
        opacity: 0.6;
        cursor: not-allowed;
    }

    .spinner-border-sm {
        width: 14px;
        height: 14px;
        border: 2px solid currentColor;
        border-right-color: transparent;
        border-radius: 50%;
        animation: spinner-border 0.75s linear infinite;
    }

    @@keyframes spinner-border {
        to { transform: rotate(360deg); }
    }

    /* Validation Summary */
    .validation-summary {
        margin-top: 20px;
        padding: 15px;
        background: #f8d7da;
        border: 1px solid #f5c6cb;
        border-radius: 6px;
        color: #721c24;
    }

    .validation-summary ul {
        margin: 0;
        padding-left: 20px;
    }

    /* ABN Lookup Styles */
    .abn-lookup-wrapper,
    .business-search-wrapper {
        position: relative;
    }

    .business-search-wrapper {
        display: flex;
        gap: 10px;
        align-items: stretch;
    }

    .business-search-wrapper input {
        flex: 1;
    }

    .search-btn {
        padding: 10px 16px;
        background: linear-gradient(135deg, #0D1A80 0%, #3144CD 100%);
        color: white;
        border: none;
        border-radius: 6px;
        cursor: pointer;
        display: flex;
        align-items: center;
        gap: 8px;
        font-weight: 600;
        font-size: 14px;
        transition: all 0.2s;
        white-space: nowrap;
    }

    .search-btn:hover:not(:disabled) {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(13, 26, 128, 0.3);
    }

    .search-btn:disabled {
        opacity: 0.6;
        cursor: not-allowed;
        transform: none;
    }

    .abn-loading {
        position: absolute;
        right: 10px;
        top: 50%;
        transform: translateY(-50%);
        color: #0D1A80;
    }

    .abn-validation {
        margin-top: 8px;
        padding: 8px 12px;
        border-radius: 4px;
        font-size: 13px;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .abn-validation.valid,
    .abn-validation.populated {
        background: #d4edda;
        color: #155724;
        border: 1px solid #c3e6cb;
    }

    .abn-validation.invalid,
    .abn-validation.error {
        background: #f8d7da;
        color: #721c24;
        border: 1px solid #f5c6cb;
    }

    .abn-validation.not-found {
        background: #fff3cd;
        color: #856404;
        border: 1px solid #ffeaa7;
    }

    .form-control.valid {
        border-color: #28a745;
        background-color: #f8fff9;
    }

    /* Contact Management Styles */
    .section-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

    .contacts-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        gap: 20px;
        margin-top: 20px;
    }

    .empty-state {
        text-align: center;
        padding: 60px 20px;
        background: #f8f9fa;
        border-radius: 12px;
        border: 2px dashed #dee2e6;
    }

    .empty-state p {
        margin: 15px 0;
        font-size: 16px;
    }

    .empty-state .btn-outline-primary {
        background: transparent;
        border: 2px solid #28a745;
        color: #28a745;
        padding: 10px 20px;
        font-weight: 600;
    }

    .empty-state .btn-outline-primary:hover {
        background: #28a745;
        color: white;
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(40, 167, 69, 0.3);
    }

    .form-control.invalid,
    .form-control.error {
        border-color: #dc3545;
        background-color: #fff8f8;
    }

    .form-control.not-found {
        border-color: #ffc107;
        background-color: #fffef8;
    }

    .form-control.populated {
        border-color: #28a745;
        background-color: #f8fff9;
    }

    .abn-results {
        position: absolute;
        top: 100%;
        left: 0;
        right: 0;
        background: white;
        border: 1px solid #ddd;
        border-top: none;
        border-radius: 0 0 6px 6px;
        max-height: 400px;
        overflow-y: auto;
        z-index: 1000;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    }

    .results-header {
        padding: 12px 16px;
        background: #f8f9fa;
        border-bottom: 1px solid #eee;
        font-weight: 600;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .close-btn {
        background: none;
        border: none;
        font-size: 18px;
        color: #666;
        cursor: pointer;
        padding: 0;
        width: 20px;
        height: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .close-btn:hover {
        color: #333;
    }

    .result-item {
        padding: 12px 16px;
        cursor: pointer;
        border-bottom: 1px solid #f0f0f0;
        transition: background 0.2s;
    }

    .result-item:hover {
        background: #f8f9fa;
    }

    .result-item:last-child {
        border-bottom: none;
    }

    .result-name {
        font-weight: 600;
        color: #333;
        margin-bottom: 4px;
    }

    .result-abn {
        font-size: 13px;
        color: #0D1A80;
        font-weight: 600;
        margin-bottom: 4px;
    }

    .result-address {
        font-size: 12px;
        color: #666;
        margin-bottom: 2px;
    }

    .result-trading {
        font-size: 12px;
        color: #666;
        font-style: italic;
    }

    /* Modal Styles */
    .modal-backdrop {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        z-index: 1040;
    }

    .modal-dialog {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 90%;
        max-width: 700px;
        max-height: 90vh;
        z-index: 1050;
        overflow-y: auto;
    }

    .modal-content {
        background: white;
        border-radius: 8px;
        box-shadow: 0 10px 50px rgba(0, 0, 0, 0.3);
    }

    .modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 20px;
        border-bottom: 1px solid #e9ecef;
        background: linear-gradient(135deg, #3144CD 0%, #0D1A80 100%);
        color: white;
        border-radius: 8px 8px 0 0;
    }

    .modal-header h3 {
        margin: 0;
        font-size: 20px;
    }

    .modal-header .close-btn {
        background: none;
        border: none;
        color: white;
        font-size: 28px;
        cursor: pointer;
        padding: 0;
        width: 30px;
        height: 30px;
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0.8;
    }

    .modal-header .close-btn:hover {
        opacity: 1;
    }

    .modal-body {
        padding: 20px;
    }

    .search-mode-toggle {
        display: flex;
        gap: 10px;
        margin-bottom: 20px;
    }

    .toggle-btn {
        flex: 1;
        padding: 10px;
        border: 2px solid #e9ecef;
        background: white;
        border-radius: 4px;
        cursor: pointer;
        transition: all 0.2s;
    }

    .toggle-btn:hover {
        background: #f8f9fa;
    }

    .toggle-btn.active {
        background: linear-gradient(135deg, #3144CD 0%, #0D1A80 100%);
        color: white;
        border-color: #3144CD;
    }

    .search-input-section {
        margin-bottom: 20px;
    }

    .search-input-section label {
        font-weight: 600;
        margin-bottom: 8px;
        display: block;
    }

    .search-results {
        max-height: 400px;
        overflow-y: auto;
    }

    .result-card {
        padding: 15px;
        border: 1px solid #e9ecef;
        border-radius: 4px;
        margin-bottom: 10px;
        cursor: pointer;
        transition: all 0.2s;
    }

    .result-card:hover {
        background: #f8f9fa;
        border-color: #3144CD;
        box-shadow: 0 2px 8px rgba(49, 68, 205, 0.1);
    }

    .result-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 10px;
    }

    .result-details {
        font-size: 14px;
        color: #666;
    }

    .result-details > div {
        margin-bottom: 4px;
    }

    .result-details i {
        width: 16px;
        text-align: center;
        margin-right: 8px;
        color: #3144CD;
    }
</style>