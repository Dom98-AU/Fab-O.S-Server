@page "/customers/{Id:int}"
@rendermode InteractiveServer
@using FabOS.WebServer.Components.Shared
@using FabOS.WebServer.Components.Shared.Interfaces
@using FabOS.WebServer.Data.Contexts
@using FabOS.WebServer.Models.Entities
@using Microsoft.EntityFrameworkCore

<PageTitle>Customer Details - Fab.OS</PageTitle>

<!-- Standard Toolbar -->
<StandardToolbar ActionProvider="@this" ShowSearch="false" />

<!-- Content -->
<div class="customer-detail-container">
    @if (isLoading)
    {
        <div class="loading-container">
            <div class="loading-spinner"></div>
            <p>Loading customer details...</p>
        </div>
    }
    else if (customer == null)
    {
        <div class="error-container">
            <i class="fas fa-exclamation-triangle"></i>
            <h3>Customer Not Found</h3>
            <p>The requested customer could not be found.</p>
            <button class="btn btn-primary" @onclick="NavigateBack">
                <i class="fas fa-arrow-left"></i>
                Back to Customers
            </button>
        </div>
    }
    else
    {
        <!-- Customer Header Card -->
        <div class="detail-card header-card">
            <div class="header-content">
                <div class="header-main">
                    <h1 class="customer-name">@customer.Name</h1>
                    <span class="customer-code">@customer.Code</span>
                    <span class="status-badge @(customer.IsActive ? "active" : "inactive")">
                        @(customer.IsActive ? "Active" : "Inactive")
                    </span>
                </div>
                <div class="header-actions">
                    <button class="btn btn-primary" @onclick="EditCustomer">
                        <i class="fas fa-edit"></i>
                        Edit
                    </button>
                </div>
            </div>
        </div>

        <div class="detail-cards-grid">
            <!-- Basic Information Card -->
            <div class="detail-card">
                <div class="card-header">
                    <h3><i class="fas fa-info-circle"></i> Basic Information</h3>
                </div>
                <div class="card-content">
                    <div class="info-row">
                        <span class="info-label">ABN:</span>
                        <span class="info-value">@(customer.ABN ?? "Not provided")</span>
                    </div>
                    <div class="info-row">
                        <span class="info-label">Industry:</span>
                        <span class="info-value">@(customer.Industry ?? "Not specified")</span>
                    </div>
                    <div class="info-row">
                        <span class="info-label">Website:</span>
                        <span class="info-value">
                            @if (!string.IsNullOrEmpty(customer.Website))
                            {
                                <a href="@customer.Website" target="_blank">@customer.Website</a>
                            }
                            else
                            {
                                <span>Not provided</span>
                            }
                        </span>
                    </div>
                    @if (!string.IsNullOrEmpty(customer.Notes))
                    {
                        <div class="info-row">
                            <span class="info-label">Notes:</span>
                            <span class="info-value">@customer.Notes</span>
                        </div>
                    }
                </div>
            </div>

            <!-- Primary Address Card -->
            <div class="detail-card">
                <div class="card-header">
                    <h3><i class="fas fa-map-marker-alt"></i> Primary Address</h3>
                </div>
                <div class="card-content">
                    @if (primaryAddress != null)
                    {
                        <div class="address-info">
                            <p>@primaryAddress.AddressLine1</p>
                            @if (!string.IsNullOrEmpty(primaryAddress.AddressLine2))
                            {
                                <p>@primaryAddress.AddressLine2</p>
                            }
                            <p>@primaryAddress.City, @primaryAddress.State @primaryAddress.PostalCode</p>
                            <p>@primaryAddress.Country</p>
                        </div>
                        @if (!string.IsNullOrEmpty(primaryAddress.GooglePlaceId))
                        {
                            <button class="btn-link" @onclick="() => ViewOnMap(primaryAddress)">
                                <i class="fas fa-external-link-alt"></i> View on Google Maps
                            </button>
                        }
                    }
                    else
                    {
                        <p class="no-data">No address provided</p>
                    }
                </div>
            </div>

            <!-- Primary Contact Card -->
            <div class="detail-card">
                <div class="card-header">
                    <h3><i class="fas fa-user"></i> Primary Contact</h3>
                </div>
                <div class="card-content">
                    @if (primaryContact != null)
                    {
                        <div class="info-row">
                            <span class="info-label">Name:</span>
                            <span class="info-value">@primaryContact.FirstName @primaryContact.LastName</span>
                        </div>
                        @if (!string.IsNullOrEmpty(primaryContact.Title))
                        {
                            <div class="info-row">
                                <span class="info-label">Title:</span>
                                <span class="info-value">@primaryContact.Title</span>
                            </div>
                        }
                        @if (!string.IsNullOrEmpty(primaryContact.Department))
                        {
                            <div class="info-row">
                                <span class="info-label">Department:</span>
                                <span class="info-value">@primaryContact.Department</span>
                            </div>
                        }
                        <div class="info-row">
                            <span class="info-label">Email:</span>
                            <span class="info-value">
                                <a href="mailto:@primaryContact.Email">@primaryContact.Email</a>
                            </span>
                        </div>
                        @if (!string.IsNullOrEmpty(primaryContact.PhoneNumber))
                        {
                            <div class="info-row">
                                <span class="info-label">Phone:</span>
                                <span class="info-value">@primaryContact.PhoneNumber</span>
                            </div>
                        }
                        @if (!string.IsNullOrEmpty(primaryContact.MobileNumber))
                        {
                            <div class="info-row">
                                <span class="info-label">Mobile:</span>
                                <span class="info-value">@primaryContact.MobileNumber</span>
                            </div>
                        }
                    }
                    else if (!string.IsNullOrEmpty(customer.ContactPerson))
                    {
                        <!-- Fallback to legacy fields -->
                        <div class="info-row">
                            <span class="info-label">Contact:</span>
                            <span class="info-value">@customer.ContactPerson</span>
                        </div>
                        @if (!string.IsNullOrEmpty(customer.Email))
                        {
                            <div class="info-row">
                                <span class="info-label">Email:</span>
                                <span class="info-value">
                                    <a href="mailto:@customer.Email">@customer.Email</a>
                                </span>
                            </div>
                        }
                        @if (!string.IsNullOrEmpty(customer.PhoneNumber))
                        {
                            <div class="info-row">
                                <span class="info-label">Phone:</span>
                                <span class="info-value">@customer.PhoneNumber</span>
                            </div>
                        }
                    }
                    else
                    {
                        <p class="no-data">No contact information provided</p>
                    }
                </div>
            </div>
        </div>

        <!-- Additional Contacts Section -->
        @if (customer.Contacts?.Count > 1)
        {
            <div class="detail-card full-width">
                <div class="card-header">
                    <h3><i class="fas fa-users"></i> Additional Contacts</h3>
                </div>
                <div class="card-content">
                    <div class="contacts-grid">
                        @foreach (var contact in customer.Contacts.Where(c => !c.IsPrimary))
                        {
                            <div class="contact-item">
                                <div class="contact-name">
                                    <strong>@contact.FirstName @contact.LastName</strong>
                                    @if (!string.IsNullOrEmpty(contact.Title))
                                    {
                                        <span class="contact-title">@contact.Title</span>
                                    }
                                </div>
                                <div class="contact-details">
                                    <a href="mailto:@contact.Email">@contact.Email</a>
                                    @if (!string.IsNullOrEmpty(contact.PhoneNumber))
                                    {
                                        <span>• @contact.PhoneNumber</span>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }

        <!-- Related Trace Drawings -->
        @if (relatedDrawings?.Any() == true)
        {
            <div class="detail-card full-width">
                <div class="card-header">
                    <h3><i class="fas fa-file-pdf"></i> Related Trace Drawings (@relatedDrawings.Count)</h3>
                </div>
                <div class="card-content">
                    <div class="table-container">
                        <table class="data-table">
                            <thead>
                                <tr>
                                    <th>Drawing Number</th>
                                    <th>File Name</th>
                                    <th>Project</th>
                                    <th>Upload Date</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var drawing in relatedDrawings.Take(5))
                                {
                                    <tr>
                                        <td>@(drawing.DrawingNumber ?? "-")</td>
                                        <td>@drawing.FileName</td>
                                        <td>@(drawing.Project?.ProjectName ?? "-")</td>
                                        <td>@drawing.UploadDate.ToString("dd/MM/yyyy")</td>
                                        <td>
                                            <span class="status-badge">@drawing.ProcessingStatus</span>
                                        </td>
                                        <td>
                                            <button class="btn-icon" title="View" @onclick="() => ViewDrawing(drawing.Id)">
                                                <i class="fas fa-eye"></i>
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        @if (relatedDrawings.Count > 5)
                        {
                            <div class="view-all">
                                <button class="btn-link" @onclick="ViewAllDrawings">
                                    View all @relatedDrawings.Count drawings →
                                </button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }

        <!-- Activity Timeline -->
        <div class="detail-card full-width">
            <div class="card-header">
                <h3><i class="fas fa-clock"></i> Activity</h3>
            </div>
            <div class="card-content">
                <div class="timeline">
                    <div class="timeline-item">
                        <div class="timeline-marker"></div>
                        <div class="timeline-content">
                            <span class="timeline-date">@customer.LastModified.ToString("dd MMM yyyy HH:mm")</span>
                            <span class="timeline-text">Last modified</span>
                        </div>
                    </div>
                    <div class="timeline-item">
                        <div class="timeline-marker"></div>
                        <div class="timeline-content">
                            <span class="timeline-date">@customer.CreatedDate.ToString("dd MMM yyyy HH:mm")</span>
                            <span class="timeline-text">Customer created</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<style>
    .customer-detail-container {
        padding: 20px;
        max-width: 1400px;
        margin: 0 auto;
    }

    .loading-container, .error-container {
        text-align: center;
        padding: 60px 20px;
    }

    .loading-spinner {
        width: 40px;
        height: 40px;
        margin: 0 auto 20px;
        border: 4px solid #f3f3f3;
        border-top: 4px solid #0D1A80;
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }

    @@keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }

    .error-container i {
        font-size: 64px;
        color: #dc3545;
        margin-bottom: 20px;
    }

    .detail-card {
        background: white;
        border-radius: 12px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        margin-bottom: 20px;
        overflow: hidden;
    }

    .header-card {
        background: linear-gradient(135deg, #0D1A80 0%, #3144CD 100%);
        color: white;
        padding: 30px;
    }

    .header-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .header-main {
        display: flex;
        align-items: center;
        gap: 15px;
    }

    .customer-name {
        font-size: 32px;
        font-weight: 600;
        margin: 0;
    }

    .customer-code {
        background: rgba(255,255,255,0.2);
        padding: 6px 12px;
        border-radius: 6px;
        font-size: 14px;
    }

    .detail-cards-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
        gap: 20px;
        margin-bottom: 20px;
    }

    .detail-card.full-width {
        grid-column: 1 / -1;
    }

    .card-header {
        padding: 20px;
        border-bottom: 1px solid #eee;
    }

    .card-header h3 {
        margin: 0;
        color: #0D1A80;
        font-size: 18px;
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .card-header i {
        font-size: 16px;
    }

    .card-content {
        padding: 20px;
    }

    .info-row {
        display: flex;
        margin-bottom: 12px;
    }

    .info-row:last-child {
        margin-bottom: 0;
    }

    .info-label {
        font-weight: 600;
        color: #666;
        min-width: 120px;
        font-size: 14px;
    }

    .info-value {
        color: #333;
        font-size: 14px;
        flex: 1;
    }

    .address-info p {
        margin: 0 0 8px 0;
        color: #333;
        font-size: 14px;
    }

    .no-data {
        color: #999;
        font-style: italic;
        font-size: 14px;
    }

    .status-badge {
        display: inline-block;
        padding: 4px 12px;
        border-radius: 12px;
        font-size: 12px;
        font-weight: 600;
        text-transform: uppercase;
    }

    .status-badge.active {
        background-color: #d4edda;
        color: #155724;
    }

    .status-badge.inactive {
        background-color: #f8d7da;
        color: #721c24;
    }

    .contacts-grid {
        display: grid;
        gap: 15px;
    }

    .contact-item {
        padding: 15px;
        background: #f8f9fa;
        border-radius: 8px;
    }

    .contact-name {
        margin-bottom: 8px;
    }

    .contact-title {
        color: #666;
        font-size: 14px;
        margin-left: 10px;
    }

    .contact-details {
        font-size: 14px;
        color: #666;
    }

    .contact-details a {
        color: #0D1A80;
        text-decoration: none;
    }

    .contact-details a:hover {
        text-decoration: underline;
    }

    .table-container {
        overflow-x: auto;
    }

    .data-table {
        width: 100%;
        border-collapse: collapse;
    }

    .data-table th {
        padding: 12px;
        text-align: left;
        background: #f8f9fa;
        font-weight: 600;
        font-size: 14px;
        color: #666;
        border-bottom: 2px solid #dee2e6;
    }

    .data-table td {
        padding: 12px;
        font-size: 14px;
        border-bottom: 1px solid #eee;
    }

    .timeline {
        position: relative;
        padding-left: 30px;
    }

    .timeline::before {
        content: '';
        position: absolute;
        left: 8px;
        top: 0;
        bottom: 0;
        width: 2px;
        background: #e9ecef;
    }

    .timeline-item {
        position: relative;
        margin-bottom: 20px;
    }

    .timeline-marker {
        position: absolute;
        left: -26px;
        top: 4px;
        width: 12px;
        height: 12px;
        border-radius: 50%;
        background: #0D1A80;
        border: 2px solid white;
    }

    .timeline-content {
        display: flex;
        flex-direction: column;
    }

    .timeline-date {
        font-size: 12px;
        color: #666;
        margin-bottom: 4px;
    }

    .timeline-text {
        font-size: 14px;
        color: #333;
    }

    .btn {
        padding: 10px 20px;
        border: none;
        border-radius: 6px;
        font-weight: 600;
        cursor: pointer;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        transition: all 0.2s;
        font-size: 14px;
    }

    .btn-primary {
        background: white;
        color: #0D1A80;
    }

    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(255,255,255,0.3);
    }

    .btn-icon {
        width: 32px;
        height: 32px;
        border: none;
        background: #f0f0f0;
        border-radius: 4px;
        cursor: pointer;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        transition: all 0.2s;
    }

    .btn-icon:hover {
        background: #0D1A80;
        color: white;
    }

    .btn-link {
        background: none;
        border: none;
        color: #0D1A80;
        cursor: pointer;
        padding: 5px 0;
        font-size: 14px;
        transition: color 0.2s;
    }

    .btn-link:hover {
        color: #3144CD;
    }

    .view-all {
        margin-top: 15px;
        text-align: center;
    }
</style>