@page "/customers"
@rendermode InteractiveServer
@using FabOS.WebServer.Components.Shared
@using FabOS.WebServer.Components.Shared.Interfaces
@using FabOS.WebServer.Data.Contexts
@using FabOS.WebServer.Models.Entities
@using Microsoft.EntityFrameworkCore

<PageTitle>Customers - Fab.OS</PageTitle>

<!-- Standard Toolbar -->
<StandardToolbar ActionProvider="@this" OnSearch="@OnSearchChanged" SearchPlaceholder="Search customers..." />

<!-- Content -->
<div class="customers-container">
    @if (isLoading)
    {
        <div class="loading-container">
            <div class="loading-spinner"></div>
            <p>Loading customers...</p>
        </div>
    }
    else
    {
        <!-- Results Summary -->
        <div class="content-header">
            <div class="results-summary">
                <span class="results-count">@filteredCustomers.Count customer@(filteredCustomers.Count != 1 ? "s" : "") found</span>
                @if (!string.IsNullOrEmpty(searchTerm))
                {
                    <span class="search-filter">â€¢ Filtered by "@searchTerm"</span>
                }
            </div>
        </div>

        <!-- Customer Table -->
        @if (filteredCustomers.Any())
        {
            <div class="table-container">
                <table class="customers-table">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>ABN</th>
                            <th>Primary Contact</th>
                            <th>Email</th>
                            <th>Phone</th>
                            <th>Industry</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var customer in filteredCustomers)
                        {
                            <tr>
                                <td>
                                    <div class="customer-name">
                                        <strong>@customer.Name</strong>
                                        @if (!string.IsNullOrEmpty(customer.Code))
                                        {
                                            <span class="customer-code">(@customer.Code)</span>
                                        }
                                    </div>
                                </td>
                                <td>@(customer.ABN ?? "-")</td>
                                <td>@(customer.ContactPerson ?? "-")</td>
                                <td>
                                    @if (!string.IsNullOrEmpty(customer.Email))
                                    {
                                        <a href="mailto:@customer.Email">@customer.Email</a>
                                    }
                                    else
                                    {
                                        <span>-</span>
                                    }
                                </td>
                                <td>@(customer.PhoneNumber ?? "-")</td>
                                <td>@(customer.Industry ?? "-")</td>
                                <td>
                                    <span class="status-badge @(customer.IsActive ? "active" : "inactive")">
                                        @(customer.IsActive ? "Active" : "Inactive")
                                    </span>
                                </td>
                                <td>
                                    <div class="action-buttons">
                                        <button class="btn-icon" title="View" @onclick="() => ViewCustomer(customer.Id)">
                                            <i class="fas fa-eye"></i>
                                        </button>
                                        <button class="btn-icon" title="Edit" @onclick="() => EditCustomer(customer.Id)">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                        <button class="btn-icon btn-danger" title="Delete" @onclick="() => DeleteCustomer(customer)">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="empty-state">
                <div class="empty-icon">
                    <i class="fas fa-users"></i>
                </div>
                <h3>No customers found</h3>
                <p>@(string.IsNullOrEmpty(searchTerm) ? "Start by adding your first customer." : $"No customers match \"{searchTerm}\". Try adjusting your search.")</p>
                <button type="button" class="btn btn-primary" @onclick="CreateNewCustomer">
                    <i class="fas fa-plus"></i>
                    Add New Customer
                </button>
            </div>
        }
    }
</div>

<style>
    .customers-container {
        padding: 20px;
        max-width: 1400px;
        margin: 0 auto;
    }

    .loading-container {
        text-align: center;
        padding: 60px 20px;
    }

    .loading-spinner {
        width: 40px;
        height: 40px;
        margin: 0 auto 20px;
        border: 4px solid #f3f3f3;
        border-top: 4px solid #0D1A80;
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }

    @@keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }

    .content-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

    .results-summary {
        font-size: 14px;
        color: #666;
    }

    .results-count {
        font-weight: 600;
        color: #333;
    }

    .search-filter {
        margin-left: 10px;
        color: #666;
    }

    .table-container {
        background: white;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        overflow: hidden;
    }

    .customers-table {
        width: 100%;
        border-collapse: collapse;
    }

    .customers-table thead {
        background: linear-gradient(135deg, #0D1A80 0%, #3144CD 100%);
        color: white;
    }

    .customers-table th {
        padding: 12px 16px;
        text-align: left;
        font-weight: 600;
        font-size: 14px;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .customers-table tbody tr {
        border-bottom: 1px solid #eee;
        transition: background-color 0.2s;
    }

    .customers-table tbody tr:hover {
        background-color: #f8f9fa;
    }

    .customers-table td {
        padding: 12px 16px;
        font-size: 14px;
    }

    .customer-name {
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .customer-code {
        color: #666;
        font-size: 12px;
    }

    .status-badge {
        display: inline-block;
        padding: 4px 12px;
        border-radius: 12px;
        font-size: 12px;
        font-weight: 600;
        text-transform: uppercase;
    }

    .status-badge.active {
        background-color: #d4edda;
        color: #155724;
    }

    .status-badge.inactive {
        background-color: #f8d7da;
        color: #721c24;
    }

    .action-buttons {
        display: flex;
        gap: 8px;
    }

    .btn-icon {
        width: 32px;
        height: 32px;
        border: none;
        background: #f0f0f0;
        border-radius: 4px;
        cursor: pointer;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        transition: all 0.2s;
    }

    .btn-icon:hover {
        background: #0D1A80;
        color: white;
    }

    .btn-icon.btn-danger:hover {
        background: #dc3545;
        color: white;
    }

    .empty-state {
        text-align: center;
        padding: 60px 20px;
    }

    .empty-icon {
        font-size: 64px;
        color: #ddd;
        margin-bottom: 20px;
    }

    .empty-state h3 {
        color: #333;
        margin-bottom: 10px;
    }

    .empty-state p {
        color: #666;
        margin-bottom: 30px;
    }

    .btn {
        padding: 10px 20px;
        border: none;
        border-radius: 6px;
        font-weight: 600;
        cursor: pointer;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        transition: all 0.2s;
    }

    .btn-primary {
        background: linear-gradient(135deg, #0D1A80 0%, #3144CD 100%);
        color: white;
    }

    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(13, 26, 128, 0.3);
    }
</style>