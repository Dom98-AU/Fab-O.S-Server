@page "/contacts"
@rendermode InteractiveServer
@using FabOS.WebServer.Components.Shared
@using FabOS.WebServer.Components.Shared.Interfaces
@using FabOS.WebServer.Data.Contexts
@using FabOS.WebServer.Models.Entities
@using Microsoft.EntityFrameworkCore

<PageTitle>Contacts - Fab.OS</PageTitle>

<!-- Standard Toolbar -->
<StandardToolbar ActionProvider="@this" OnSearch="@OnSearchChanged" SearchPlaceholder="Search contacts..." />

<!-- Content -->
<div class="contacts-container">
    @if (isLoading)
    {
        <div class="loading-container">
            <div class="loading-spinner"></div>
            <p>Loading contacts...</p>
        </div>
    }
    else
    {
        <!-- Results Summary -->
        <div class="content-header">
            <div class="results-summary">
                <span class="results-count">@filteredContacts.Count contact@(filteredContacts.Count != 1 ? "s" : "") found</span>
                @if (!string.IsNullOrEmpty(searchTerm))
                {
                    <span class="search-filter">• Filtered by "@searchTerm"</span>
                }
            </div>
            <div class="view-options">
                <button class="view-toggle @(viewMode == "grid" ? "active" : "")" @onclick="@(() => SetViewMode("grid"))" title="Grid View">
                    <i class="fas fa-th"></i>
                </button>
                <button class="view-toggle @(viewMode == "list" ? "active" : "")" @onclick="@(() => SetViewMode("list"))" title="List View">
                    <i class="fas fa-list"></i>
                </button>
            </div>
        </div>

        @if (filteredContacts.Any())
        {
            @if (viewMode == "grid")
            {
                <!-- Grid View -->
                <div class="contacts-grid">
                    @foreach (var contact in filteredContacts)
                    {
                        <div class="contact-card">
                            <div class="contact-card-header">
                                <div class="contact-avatar">
                                    <span>@GetInitials(contact)</span>
                                </div>
                                <div class="contact-status">
                                    <span class="status-badge @(contact.IsActive ? "active" : "inactive")">
                                        @(contact.IsActive ? "Active" : "Inactive")
                                    </span>
                                    @if (contact.IsPrimary)
                                    {
                                        <span class="primary-badge">Primary</span>
                                    }
                                </div>
                            </div>
                            <div class="contact-card-body">
                                <h3 class="contact-name">@contact.FirstName @contact.LastName</h3>
                                @if (!string.IsNullOrEmpty(contact.Title))
                                {
                                    <p class="contact-title">@contact.Title</p>
                                }
                                <p class="contact-company">
                                    <i class="fas fa-building"></i>
                                    @(contact.Customer?.Name ?? "No Company")
                                </p>
                                @if (!string.IsNullOrEmpty(contact.Department))
                                {
                                    <p class="contact-department">
                                        <i class="fas fa-sitemap"></i>
                                        @contact.Department
                                    </p>
                                }
                                <div class="contact-details">
                                    @if (!string.IsNullOrEmpty(contact.Email))
                                    {
                                        <a href="mailto:@contact.Email" class="contact-link">
                                            <i class="fas fa-envelope"></i>
                                            <span>@contact.Email</span>
                                        </a>
                                    }
                                    @if (!string.IsNullOrEmpty(contact.PhoneNumber))
                                    {
                                        <div class="contact-link">
                                            <i class="fas fa-phone"></i>
                                            <span>@contact.PhoneNumber</span>
                                        </div>
                                    }
                                    @if (!string.IsNullOrEmpty(contact.MobileNumber))
                                    {
                                        <div class="contact-link">
                                            <i class="fas fa-mobile-alt"></i>
                                            <span>@contact.MobileNumber</span>
                                        </div>
                                    }
                                </div>
                            </div>
                            <div class="contact-card-footer">
                                <button class="btn-icon" title="View" @onclick="() => ViewContact(contact.Id)">
                                    <i class="fas fa-eye"></i>
                                </button>
                                <button class="btn-icon" title="Edit" @onclick="() => EditContact(contact.Id)">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button class="btn-icon btn-danger" title="Delete" @onclick="() => DeleteContact(contact)">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <!-- List View -->
                <div class="table-container">
                    <table class="contacts-table">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Company</th>
                                <th>Title</th>
                                <th>Department</th>
                                <th>Email</th>
                                <th>Phone</th>
                                <th>Mobile</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var contact in filteredContacts)
                            {
                                <tr>
                                    <td>
                                        <div class="name-cell">
                                            <strong>@contact.FirstName @contact.LastName</strong>
                                            @if (contact.IsPrimary)
                                            {
                                                <span class="primary-indicator" title="Primary Contact">★</span>
                                            }
                                        </div>
                                    </td>
                                    <td>@(contact.Customer?.Name ?? "-")</td>
                                    <td>@(contact.Title ?? "-")</td>
                                    <td>@(contact.Department ?? "-")</td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(contact.Email))
                                        {
                                            <a href="mailto:@contact.Email">@contact.Email</a>
                                        }
                                        else
                                        {
                                            <span>-</span>
                                        }
                                    </td>
                                    <td>@(contact.PhoneNumber ?? "-")</td>
                                    <td>@(contact.MobileNumber ?? "-")</td>
                                    <td>
                                        <span class="status-badge @(contact.IsActive ? "active" : "inactive")">
                                            @(contact.IsActive ? "Active" : "Inactive")
                                        </span>
                                    </td>
                                    <td>
                                        <div class="action-buttons">
                                            <button class="btn-icon" title="View" @onclick="() => ViewContact(contact.Id)">
                                                <i class="fas fa-eye"></i>
                                            </button>
                                            <button class="btn-icon" title="Edit" @onclick="() => EditContact(contact.Id)">
                                                <i class="fas fa-edit"></i>
                                            </button>
                                            <button class="btn-icon btn-danger" title="Delete" @onclick="() => DeleteContact(contact)">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        }
        else
        {
            <div class="empty-state">
                <div class="empty-icon">
                    <i class="fas fa-address-book"></i>
                </div>
                <h3>No contacts found</h3>
                <p>@(string.IsNullOrEmpty(searchTerm) ? "Start by adding your first contact." : $"No contacts match \"{searchTerm}\". Try adjusting your search.")</p>
                <button type="button" class="btn btn-primary" @onclick="CreateNewContact">
                    <i class="fas fa-plus"></i>
                    Add New Contact
                </button>
            </div>
        }
    }
</div>

<style>
    .contacts-container {
        padding: 20px;
        max-width: 1400px;
        margin: 0 auto;
    }

    .loading-container {
        text-align: center;
        padding: 60px 20px;
    }

    .loading-spinner {
        width: 40px;
        height: 40px;
        margin: 0 auto 20px;
        border: 4px solid #f3f3f3;
        border-top: 4px solid #0D1A80;
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }

    @@keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }

    .content-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

    .results-summary {
        font-size: 14px;
        color: #666;
    }

    .results-count {
        font-weight: 600;
        color: #333;
    }

    .search-filter {
        margin-left: 10px;
        color: #666;
    }

    .view-options {
        display: flex;
        gap: 8px;
    }

    .view-toggle {
        padding: 8px 12px;
        border: 1px solid #ddd;
        background: white;
        cursor: pointer;
        border-radius: 4px;
        transition: all 0.2s;
        color: #666;
    }

    .view-toggle.active {
        background: #0D1A80;
        color: white;
        border-color: #0D1A80;
    }

    .view-toggle:hover:not(.active) {
        background: #f0f0f0;
    }

    /* Grid View Styles */
    .contacts-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
        gap: 20px;
    }

    .contact-card {
        background: white;
        border-radius: 12px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        overflow: hidden;
        transition: transform 0.2s, box-shadow 0.2s;
    }

    .contact-card:hover {
        transform: translateY(-4px);
        box-shadow: 0 4px 16px rgba(0,0,0,0.15);
    }

    .contact-card-header {
        padding: 20px;
        background: linear-gradient(135deg, #f5f7fa 0%, #e9ecef 100%);
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .contact-avatar {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background: linear-gradient(135deg, #0D1A80 0%, #3144CD 100%);
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 600;
        font-size: 18px;
    }

    .contact-status {
        display: flex;
        flex-direction: column;
        align-items: flex-end;
        gap: 4px;
    }

    .contact-card-body {
        padding: 20px;
    }

    .contact-name {
        margin: 0 0 8px 0;
        color: #333;
        font-size: 18px;
        font-weight: 600;
    }

    .contact-title {
        color: #666;
        font-size: 14px;
        margin: 0 0 12px 0;
        font-style: italic;
    }

    .contact-company,
    .contact-department {
        color: #666;
        font-size: 14px;
        margin: 8px 0;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .contact-company i,
    .contact-department i {
        color: #0D1A80;
        width: 16px;
    }

    .contact-details {
        margin-top: 16px;
        padding-top: 16px;
        border-top: 1px solid #eee;
    }

    .contact-link {
        display: flex;
        align-items: center;
        gap: 8px;
        color: #666;
        text-decoration: none;
        font-size: 13px;
        margin: 8px 0;
        transition: color 0.2s;
    }

    a.contact-link:hover {
        color: #0D1A80;
    }

    .contact-link i {
        width: 16px;
        color: #0D1A80;
    }

    .contact-card-footer {
        padding: 12px 20px;
        background: #f8f9fa;
        display: flex;
        justify-content: flex-end;
        gap: 8px;
    }

    /* List View Styles */
    .table-container {
        background: white;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        overflow: hidden;
    }

    .contacts-table {
        width: 100%;
        border-collapse: collapse;
    }

    .contacts-table thead {
        background: linear-gradient(135deg, #0D1A80 0%, #3144CD 100%);
        color: white;
    }

    .contacts-table th {
        padding: 12px 16px;
        text-align: left;
        font-weight: 600;
        font-size: 14px;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .contacts-table tbody tr {
        border-bottom: 1px solid #eee;
        transition: background-color 0.2s;
    }

    .contacts-table tbody tr:hover {
        background-color: #f8f9fa;
    }

    .contacts-table td {
        padding: 12px 16px;
        font-size: 14px;
    }

    .name-cell {
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .primary-indicator {
        color: #ffc107;
        font-size: 16px;
    }

    .primary-badge {
        background: #ffc107;
        color: #333;
        padding: 2px 8px;
        border-radius: 12px;
        font-size: 11px;
        font-weight: 600;
        text-transform: uppercase;
    }

    .status-badge {
        display: inline-block;
        padding: 4px 12px;
        border-radius: 12px;
        font-size: 12px;
        font-weight: 600;
        text-transform: uppercase;
    }

    .status-badge.active {
        background-color: #d4edda;
        color: #155724;
    }

    .status-badge.inactive {
        background-color: #f8d7da;
        color: #721c24;
    }

    .action-buttons {
        display: flex;
        gap: 8px;
    }

    .btn-icon {
        width: 32px;
        height: 32px;
        border: none;
        background: #f0f0f0;
        border-radius: 4px;
        cursor: pointer;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        transition: all 0.2s;
    }

    .btn-icon:hover {
        background: #0D1A80;
        color: white;
    }

    .btn-icon.btn-danger:hover {
        background: #dc3545;
        color: white;
    }

    .empty-state {
        text-align: center;
        padding: 60px 20px;
    }

    .empty-icon {
        font-size: 64px;
        color: #ddd;
        margin-bottom: 20px;
    }

    .empty-state h3 {
        color: #333;
        margin-bottom: 10px;
    }

    .empty-state p {
        color: #666;
        margin-bottom: 30px;
    }

    .btn {
        padding: 10px 20px;
        border: none;
        border-radius: 6px;
        font-weight: 600;
        cursor: pointer;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        transition: all 0.2s;
    }

    .btn-primary {
        background: linear-gradient(135deg, #0D1A80 0%, #3144CD 100%);
        color: white;
    }

    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(13, 26, 128, 0.3);
    }
</style>