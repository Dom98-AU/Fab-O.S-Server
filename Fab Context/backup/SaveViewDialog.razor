@namespace SteelEstimation.Web.Components.Shared.Common
@using Microsoft.AspNetCore.Components
@using SteelEstimation.Core.Interfaces

<div class="modal fade show d-block" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-save me-2 text-primary"></i>
                    Save Current View
                </h5>
                <button type="button" class="btn-close" @onclick="Cancel" aria-label="Close"></button>
            </div>
            
            <form @onsubmit="HandleSubmit" @onsubmit:preventDefault="true">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="viewName" class="form-label">
                            View Name <span class="text-danger">*</span>
                        </label>
                        <div class="input-group">
                            <span class="input-group-text">
                                <i class="fas fa-bookmark"></i>
                            </span>
                            <input type="text" 
                                   class="form-control @(HasError ? "is-invalid" : "")" 
                                   id="viewName"
                                   @bind="ViewName" 
                                   @bind:event="oninput"
                                   @onkeyup="ClearError"
                                   placeholder="Enter a descriptive name for this view"
                                   autofocus
                                   required />
                        </div>
                        @if (HasError)
                        {
                            <div class="invalid-feedback d-block">
                                @ErrorMessage
                            </div>
                        }
                        <small class="form-text text-muted">
                            Choose a name that describes this view configuration
                        </small>
                    </div>
                    
                    <div class="view-options">
                        <div class="form-check mb-3">
                            <input class="form-check-input" 
                                   type="checkbox" 
                                   id="setAsDefault"
                                   @bind="SetAsDefault" />
                            <label class="form-check-label" for="setAsDefault">
                                <i class="fas fa-star text-warning me-1"></i>
                                Set as my default view for this page
                            </label>
                            <small class="form-text text-muted d-block ms-4">
                                This view will load automatically when you visit this page
                            </small>
                        </div>
                        
                        <div class="form-check mb-3">
                            <input class="form-check-input" 
                                   type="checkbox" 
                                   id="shareWithTeam"
                                   @bind="ShareWithTeam" />
                            <label class="form-check-label" for="shareWithTeam">
                                <i class="fas fa-users text-info me-1"></i>
                                Share with team members
                            </label>
                            <small class="form-text text-muted d-block ms-4">
                                Other users in your company can use this view
                            </small>
                        </div>
                    </div>
                    
                    <div class="alert alert-info d-flex align-items-start">
                        <i class="fas fa-info-circle me-2 mt-1"></i>
                        <div>
                            <strong>This view will save:</strong>
                            <ul class="mb-0 mt-1">
                                <li>Current view mode (table/card/list)</li>
                                <li>All active filters and search terms</li>
                                <li>Sort settings and column order</li>
                                <li>Selected items and page size</li>
                            </ul>
                        </div>
                    </div>
                </div>
                
                <div class="modal-footer">
                    <button type="button" 
                            class="btn btn-secondary" 
                            @onclick="Cancel">
                        <i class="fas fa-times me-1"></i>
                        Cancel
                    </button>
                    <button type="submit" 
                            class="btn btn-primary"
                            disabled="@(!IsValid || IsSaving)">
                        @if (IsSaving)
                        {
                            <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                            <span>Saving...</span>
                        }
                        else
                        {
                            <i class="fas fa-save me-1"></i>
                            <span>Save View</span>
                        }
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>
<div class="modal-backdrop fade show"></div>

<style>
    /* Modal Enhancements */
    .modal-content {
        border: none;
        border-radius: 12px;
        box-shadow: 0 10px 40px rgba(13, 26, 128, 0.15);
    }
    
    .modal-header {
        background: linear-gradient(135deg, rgba(49, 68, 205, 0.05) 0%, rgba(13, 26, 128, 0.08) 100%);
        border-bottom: 1px solid #E5E5E5;
        border-radius: 12px 12px 0 0;
        padding: 1.25rem;
    }
    
    .modal-title {
        color: #0D1A80;
        font-weight: 600;
        font-size: 1.125rem;
    }
    
    .modal-body {
        padding: 1.5rem;
    }
    
    .form-label {
        font-weight: 600;
        color: #161616;
        margin-bottom: 0.5rem;
    }
    
    .input-group-text {
        background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
        border-color: #E5E5E5;
        color: #3144CD;
    }
    
    .form-control:focus {
        border-color: #3144CD;
        box-shadow: 0 0 0 0.2rem rgba(49, 68, 205, 0.15);
    }
    
    .view-options {
        background: linear-gradient(135deg, rgba(49, 68, 205, 0.02) 0%, rgba(13, 26, 128, 0.04) 100%);
        border-radius: 8px;
        padding: 1rem;
        margin: 1rem 0;
    }
    
    .form-check-input:checked {
        background-color: #3144CD;
        border-color: #3144CD;
    }
    
    .form-check-label {
        font-weight: 500;
        color: #161616;
    }
    
    .alert-info {
        background: linear-gradient(135deg, rgba(49, 68, 205, 0.08) 0%, rgba(13, 26, 128, 0.12) 100%);
        border: 1px solid rgba(49, 68, 205, 0.2);
        color: #0D1A80;
    }
    
    .btn-primary {
        background: linear-gradient(135deg, #3144CD 0%, #0D1A80 100%);
        border: 1px solid #3144CD;
        font-weight: 500;
        padding: 0.5rem 1.25rem;
    }
    
    .btn-primary:hover:not(:disabled) {
        background: linear-gradient(135deg, #5261D5 0%, #3144CD 100%);
        border-color: #5261D5;
        transform: translateY(-1px);
        box-shadow: 0 4px 8px rgba(49, 68, 205, 0.2);
    }
    
    .btn-secondary {
        background: white;
        border: 1px solid #B1B1B1;
        color: #777777;
        font-weight: 500;
    }
    
    .btn-secondary:hover {
        background: #f8f9fa;
        border-color: #777777;
        color: #161616;
    }
</style>

@code {
    [Parameter] public ISaveableViewState? ViewStateProvider { get; set; }
    [Parameter] public EventCallback<(string name, bool setDefault, bool share)> OnSave { get; set; }
    [Parameter] public EventCallback OnCancel { get; set; }
    
    private string ViewName = "";
    private bool SetAsDefault = false;
    private bool ShareWithTeam = false;
    private bool IsSaving = false;
    private bool HasError = false;
    private string ErrorMessage = "";
    
    private bool IsValid => !string.IsNullOrWhiteSpace(ViewName) && ViewName.Length >= 3;
    
    protected override void OnInitialized()
    {
        // Set default name based on current state
        if (ViewStateProvider != null)
        {
            ViewName = ViewStateProvider.GetDefaultViewName();
        }
    }
    
    private async Task HandleSubmit()
    {
        if (!IsValid)
        {
            HasError = true;
            ErrorMessage = "Please enter a view name (at least 3 characters)";
            return;
        }
        
        IsSaving = true;
        StateHasChanged();
        
        try
        {
            await OnSave.InvokeAsync((ViewName, SetAsDefault, ShareWithTeam));
        }
        finally
        {
            IsSaving = false;
        }
    }
    
    private void ClearError()
    {
        HasError = false;
        ErrorMessage = "";
    }
    
    private async Task Cancel()
    {
        await OnCancel.InvokeAsync();
    }
}