.editable-table-container {
    position: relative;
}

.empty-message {
    text-align: center;
    padding: 3rem 1rem;
    color: #6c757d;
}

.editable-table {
    width: 100%;
    margin-bottom: 0;
}

.editable-table thead th {
    background-color: #f8f9fa;
    font-weight: 600;
    border-bottom: 2px solid #dee2e6;
    position: sticky;
    top: 0;
    z-index: 10;
}

.selection-column {
    width: 40px;
    text-align: center;
}

.row-number-column {
    width: 50px;
    text-align: center;
    color: #6c757d;
}

.action-column {
    width: 80px;
    text-align: center;
}

.editable-table tbody tr {
    transition: background-color 0.2s;
}

.editable-table tbody tr:hover {
    background-color: rgba(0, 123, 255, 0.05);
}

.editable-table tbody tr.pending-save {
    background-color: rgba(255, 193, 7, 0.1);
    position: relative;
}

.editable-table tbody tr.pending-save::after {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    width: 3px;
    background-color: #ffc107;
}

.editable-table tbody tr.table-active {
    background-color: rgba(13, 110, 253, 0.1);
}

.editable-table-cell {
    padding: 0.25rem 0.5rem;
    vertical-align: middle;
}

.editable-table-cell input,
.editable-table-cell select {
    border: 1px solid transparent;
    background: transparent;
    padding: 0.25rem 0.5rem;
    width: 100%;
}

.editable-table-cell input:focus,
.editable-table-cell select:focus {
    border-color: #86b7fe;
    background-color: #fff;
    box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
    outline: 0;
}

.editable-table-cell input:disabled,
.editable-table-cell select:disabled {
    background-color: #e9ecef;
    opacity: 1;
}

.editable-table-cell.is-invalid input,
.editable-table-cell.is-invalid select {
    border-color: #dc3545;
}

/* Responsive behavior for card view */
@media (max-width: 768px) {
    .editable-table-container .table-responsive {
        border: none;
    }
    
    .editable-table thead {
        display: none;
    }
    
    .editable-table tbody tr {
        display: block;
        margin-bottom: 1rem;
        border: 1px solid #dee2e6;
        border-radius: 0.25rem;
        padding: 0.75rem;
    }
    
    .editable-table tbody td {
        display: block;
        text-align: right;
        padding: 0.25rem 0;
        border: none;
    }
    
    .editable-table tbody td::before {
        content: attr(data-label);
        float: left;
        font-weight: 600;
        color: #495057;
    }
    
    .selection-column,
    .row-number-column,
    .action-column {
        width: auto;
        text-align: right;
    }
}

/* List view styles */
.list-view .editable-table {
    border: none;
}

.list-view .editable-table thead {
    display: none;
}

.list-view .editable-table tbody tr {
    border-bottom: 1px solid #dee2e6;
    display: flex;
    align-items: center;
    padding: 0.75rem 0;
}

.list-view .editable-table tbody td {
    border: none;
    padding: 0 0.5rem;
    flex: 1;
}

.list-view .selection-column {
    flex: 0 0 40px;
}

.list-view .row-number-column {
    flex: 0 0 50px;
}

.list-view .action-column {
    flex: 0 0 80px;
}

/* Keyboard navigation indicators */
.editable-table-cell.keyboard-focus {
    outline: 2px solid #0d6efd;
    outline-offset: -1px;
}

/* Drag and drop indicators */
.editable-table tbody tr.drag-over {
    background-color: rgba(13, 110, 253, 0.2);
}

.editable-table tbody tr.dragging {
    opacity: 0.5;
}

/* Loading state */
.editable-table.loading {
    position: relative;
    pointer-events: none;
    opacity: 0.6;
}

.editable-table.loading::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 40px;
    height: 40px;
    border: 4px solid #f3f3f3;
    border-top: 4px solid #0d6efd;
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    0% { transform: translate(-50%, -50%) rotate(0deg); }
    100% { transform: translate(-50%, -50%) rotate(360deg); }
}